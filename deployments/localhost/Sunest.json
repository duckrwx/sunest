{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poe",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "MicrogridRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "NodeDeactivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "microgridHash",
          "type": "bytes32"
        }
      ],
      "name": "NodeRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newHash",
          "type": "bytes32"
        }
      ],
      "name": "NodeSwitched",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "kWh",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SensorDataSubmitted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allMicrogridHashes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allNodeOperators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "getMicrogridInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "kaspaWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerOp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "latestKWh",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "capacityGB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "latestSensor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "kWh",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sunest.SensorRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listMicrogrids",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "microgridByHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "kaspaWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "energyPricePerOp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        }
      ],
      "name": "microgridsByLocation",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "wallets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "active",
          "type": "bool[]"
        },
        {
          "internalType": "uint256[]",
          "name": "latestKWh",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "capacityGB",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodeByOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "currentMicrogridHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "storedGB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poe",
      "outputs": [
        {
          "internalType": "contract ProofOfExistence",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_kaspaWallet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_energyPricePerOp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_city",
          "type": "string"
        }
      ],
      "name": "registerMicrogrid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "microgridHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialGB",
          "type": "uint256"
        }
      ],
      "name": "registerNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sensorHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "kWh",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "kWh",
          "type": "uint256"
        }
      ],
      "name": "submitSensorData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "switchIfNeeded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfcfd90e3dc77762c3267d116def90a3bd86049743972a9c3bfbd85c775ec8834",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "2869322",
    "logsBloom": "0x
    "blockHash": "0x6ea91817a80ec16b3098ffc3074ccfb0e3fda09e963a42e2e14b1d04c5a273a9",
    "transactionHash": "0xfcfd90e3dc77762c3267d116def90a3bd86049743972a9c3bfbd85c775ec8834",
    "logs": [],
    "blockNumber": 6,
    "cumulativeGasUsed": "2869322",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
  ],
  "numDeployments": 1,
  "solcInputHash": "843bddef52ce73d4ae2c19bcca877d18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MicrogridRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"NodeDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"microgridHash\",\"type\":\"bytes32\"}],\"name\":\"NodeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newHash\",\"type\":\"bytes32\"}],\"name\":\"NodeSwitched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"kWh\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SensorDataSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allMicrogridHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allNodeOperators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getMicrogridInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"kaspaWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerOp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestKWh\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityGB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"latestSensor\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"kWh\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Sunest.SensorRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMicrogrids\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"microgridByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"kaspaWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"energyPricePerOp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"}],\"name\":\"microgridsByLocation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"active\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"latestKWh\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"capacityGB\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nodeByOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"currentMicrogridHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"storedGB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poe\",\"outputs\":[{\"internalType\":\"contract ProofOfExistence\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kaspaWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_energyPricePerOp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_city\",\"type\":\"string\"}],\"name\":\"registerMicrogrid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"microgridHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialGB\",\"type\":\"uint256\"}],\"name\":\"registerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sensorHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"kWh\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"kWh\",\"type\":\"uint256\"}],\"name\":\"submitSensorData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMicrogridInfo(bytes32)\":{\"notice\":\"Info completa + energia atual e capacidade\"},\"microgridsByLocation(string,string)\":{\"notice\":\"Lista microgrids de uma cidade retornando vetores paralelos\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Sunest.sol\":\"Sunest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ProofOfExistence.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\ncontract ProofOfExistence {\\n  mapping(bytes32 => address) public files;\\n  mapping(address => bytes32[]) public users;\\n\\n  event Claimed(address indexed owner, bytes32 indexed file);\\n  event Forfeited(address indexed owner, bytes32 indexed file);\\n\\n  error NotFileOwner();\\n  error FileAlreadyClaimed();\\n\\n  modifier isOwner(bytes32 hash) {\\n    address from = msg.sender;\\n    if (files[hash] != from) revert NotFileOwner();\\n    _;\\n  }\\n\\n  modifier notClaimed(bytes32 hash) {\\n    address from = msg.sender;\\n    if (files[hash] != address(0)) revert FileAlreadyClaimed();\\n    _;\\n  }\\n\\n  function hasClaimed(bytes32 hash) public view returns (bool) {\\n    address owner = files[hash];\\n    return (owner != address(0));\\n  }\\n\\n  function ownedFiles() public view returns (bytes32[] memory) {\\n    address from = msg.sender;\\n    return users[from];\\n  }\\n\\n  function claim(bytes32 hash) public notClaimed(hash) returns (bool) {\\n    address from = msg.sender;\\n\\n    // update storage files\\n    files[hash] = from;\\n\\n    // update storage users\\n    bytes32[] storage userFiles = users[from];\\n    userFiles.push(hash);\\n\\n    emit Claimed(from, hash);\\n    return true;\\n  }\\n\\n  function forfeit(bytes32 hash) public isOwner(hash) returns (bool) {\\n    address from = msg.sender;\\n\\n    // update storage files\\n    delete files[hash];\\n\\n    // locate the index of the file going to be deleted.\\n    bytes32[] storage userFiles = users[from];\\n    uint32 delIdx = 0;\\n    for (uint32 i = 0; i < userFiles.length; i++) {\\n      if (userFiles[i] == hash) {\\n        delIdx = i;\\n        break;\\n      }\\n    }\\n    // update storage users by swap-delete\\n    if (delIdx != userFiles.length - 1) {\\n      userFiles[delIdx] = userFiles[userFiles.length - 1];\\n    }\\n    // delete\\n    userFiles.pop();\\n\\n    emit Forfeited(from, hash);\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0x197a56e0682c3a423c1dcd6093f44aeae72d4ba780f364eb2609b5c68b9ee806\",\"license\":\"UNLICENSED\"},\"contracts/Sunest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/*\\n * Sunest \\u2013 contrato simplificado para testes locais.\\n * - Registro de microgrid (wallet Kaspa, pre\\u00e7o, pa\\u00eds, cidade)\\n * - Envio de dados de gera\\u00e7\\u00e3o (submitSensorData)\\n * - Registro de n\\u00f3s verdes e troca autom\\u00e1tica de painel\\n * - Consulta amig\\u00e1vel por localiza\\u00e7\\u00e3o\\n * - getMicrogridInfo devolve todos os dados + kWh atual + capacidade em GB\\n * - Refer\\u00eancia a ProofOfExistence (PoE) para registrar arquivos no futuro\\n */\\n\\nimport \\\"./ProofOfExistence.sol\\\";\\n\\ncontract Sunest {\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 CONSTs \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    uint256 private constant KWH_PER_GB    = 5;   // 5 kWh \\u2245 1 GB\\n    uint256 private constant THRESHOLD_PCT = 30;  // % m\\u00ednima de energia antes de migrar\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 REFER\\u00caNCIA PoE \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    ProofOfExistence public poe;\\n\\n    constructor(address _poe) {\\n        poe = ProofOfExistence(_poe);\\n    }\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 STRUCTS \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    struct Microgrid {\\n        address kaspaWallet;\\n        uint256 energyPricePerOp;\\n        string  country;\\n        string  city;\\n        bool    isActive;\\n        address owner;\\n    }\\n\\n    struct SensorRecord {\\n        uint256 kWh;\\n        uint256 timestamp;\\n    }\\n\\n    struct Node {\\n        address operator;\\n        bytes32 currentMicrogridHash;\\n        bool    isActive;\\n        string  country;\\n        string  city;\\n        uint256 storedGB;\\n    }\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 STORAGE \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    mapping(bytes32 => Microgrid)      public microgridByHash;\\n    mapping(bytes32 => SensorRecord[]) public sensorHistory;\\n    mapping(address  => Node)          public nodeByOperator;\\n\\n    bytes32[] public allMicrogridHashes;\\n    address[] public allNodeOperators;\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 EVENTS \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    event MicrogridRegistered(bytes32 hash, address owner);\\n    event SensorDataSubmitted(bytes32 hash, uint256 kWh, uint256 timestamp);\\n    event NodeRegistered(address operator, bytes32 microgridHash);\\n    event NodeSwitched(address operator, bytes32 newHash);\\n    event NodeDeactivated(address operator);\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 MICROGRID \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    function registerMicrogrid(\\n        address _kaspaWallet,\\n        uint256 _energyPricePerOp,\\n        string  memory _country,\\n        string  memory _city\\n    ) external {\\n        bytes32 hash = keccak256(abi.encodePacked(_kaspaWallet, _country, _city));\\n        require(microgridByHash[hash].kaspaWallet == address(0), \\\"Already registered\\\");\\n\\n        microgridByHash[hash] = Microgrid({\\n            kaspaWallet:      _kaspaWallet,\\n            energyPricePerOp: _energyPricePerOp,\\n            country:          _country,\\n            city:             _city,\\n            isActive:         true,\\n            owner:            msg.sender\\n        });\\n        allMicrogridHashes.push(hash);\\n        emit MicrogridRegistered(hash, msg.sender);\\n    }\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 SENSOR DATA \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    function submitSensorData(bytes32 hash, uint256 kWh) external {\\n        Microgrid storage mg = microgridByHash[hash];\\n        require(mg.isActive, \\\"Inactive microgrid\\\");\\n        require(msg.sender == mg.owner || msg.sender == mg.kaspaWallet, \\\"Not authorised\\\");\\n        require(kWh > 0, \\\"kWh must be > 0\\\");\\n\\n        sensorHistory[hash].push(SensorRecord(kWh, block.timestamp));\\n        emit SensorDataSubmitted(hash, kWh, block.timestamp);\\n    }\\n\\n    function latestSensor(bytes32 hash) public view returns (SensorRecord memory) {\\n        uint len = sensorHistory[hash].length;\\n        require(len > 0, \\\"No data\\\");\\n        return sensorHistory[hash][len - 1];\\n    }\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 NODE \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n    function registerNode(\\n        bytes32 microgridHash,\\n        string  memory country,\\n        string  memory city,\\n        uint256 initialGB\\n    ) external {\\n        require(nodeByOperator[msg.sender].operator == address(0), \\\"Node exists\\\");\\n        require(microgridByHash[microgridHash].isActive, \\\"Inactive microgrid\\\");\\n\\n        nodeByOperator[msg.sender] = Node({\\n            operator:             msg.sender,\\n            currentMicrogridHash: microgridHash,\\n            isActive:             true,\\n            country:              country,\\n            city:                 city,\\n            storedGB:             initialGB\\n        });\\n        allNodeOperators.push(msg.sender);\\n        emit NodeRegistered(msg.sender, microgridHash);\\n    }\\n\\n    /* Troca ou desativa se energia < 30 % */\\n    function switchIfNeeded() external {\\n        Node storage nd = nodeByOperator[msg.sender];\\n        require(nd.isActive, \\\"Node inactive\\\");\\n\\n        uint256 required = nd.storedGB * KWH_PER_GB;\\n        SensorRecord memory curr = latestSensor(nd.currentMicrogridHash);\\n\\n        if (curr.kWh * 100 < required * THRESHOLD_PCT) {\\n            bytes32 best;\\n            for (uint i = 0; i < allMicrogridHashes.length; i++) {\\n                bytes32 h = allMicrogridHashes[i];\\n                Microgrid memory mg = microgridByHash[h];\\n                if (!mg.isActive) continue;\\n                if (\\n                    keccak256(bytes(mg.country)) == keccak256(bytes(nd.country)) &&\\n                    keccak256(bytes(mg.city))    == keccak256(bytes(nd.city))\\n                ) {\\n                    SensorRecord memory s = latestSensor(h);\\n                    if (s.kWh >= required) { best = h; break; }\\n                }\\n            }\\n            if (best != bytes32(0)) {\\n                nd.currentMicrogridHash = best;\\n                emit NodeSwitched(msg.sender, best);\\n            } else {\\n                nd.isActive = false;\\n                emit NodeDeactivated(msg.sender);\\n            }\\n        }\\n    }\\n\\n    /*\\u2013\\u2013\\u2013\\u2013\\u2013 VIEW HELPERS \\u2013\\u2013\\u2013\\u2013\\u2013*/\\n\\n    /// Lista microgrids de uma cidade retornando vetores paralelos\\n    function microgridsByLocation(string calldata country, string calldata city)\\n        external\\n        view\\n        returns (\\n            bytes32[] memory hashes,\\n            address[] memory wallets,\\n            uint256[] memory prices,\\n            bool[]    memory active,\\n            uint256[] memory latestKWh,\\n            uint256[] memory capacityGB\\n        )\\n    {\\n        uint count;\\n        for (uint i = 0; i < allMicrogridHashes.length; i++) {\\n            Microgrid storage mg = microgridByHash[allMicrogridHashes[i]];\\n            if (\\n                keccak256(bytes(mg.country)) == keccak256(bytes(country)) &&\\n                keccak256(bytes(mg.city))    == keccak256(bytes(city))\\n            ) count++;\\n        }\\n\\n        hashes      = new bytes32[](count);\\n        wallets     = new address[](count);\\n        prices      = new uint256[](count);\\n        active      = new bool[](count);\\n        latestKWh   = new uint256[](count);\\n        capacityGB  = new uint256[](count);\\n\\n        uint idx;\\n        for (uint i = 0; i < allMicrogridHashes.length; i++) {\\n            bytes32 h = allMicrogridHashes[i];\\n            Microgrid storage mg = microgridByHash[h];\\n            if (\\n                keccak256(bytes(mg.country)) == keccak256(bytes(country)) &&\\n                keccak256(bytes(mg.city))    == keccak256(bytes(city))\\n            ) {\\n                hashes[idx]  = h;\\n                wallets[idx] = mg.kaspaWallet;\\n                prices[idx]  = mg.energyPricePerOp;\\n                active[idx]  = mg.isActive;\\n\\n                uint len = sensorHistory[h].length;\\n                uint kwh = (len > 0) ? sensorHistory[h][len - 1].kWh : 0;\\n                latestKWh[idx]  = kwh;\\n                capacityGB[idx] = kwh / KWH_PER_GB;\\n                idx++;\\n            }\\n        }\\n    }\\n\\n    function listMicrogrids() external view returns (bytes32[] memory) {\\n        return allMicrogridHashes;\\n    }\\n\\n    /// Info completa + energia atual e capacidade\\n    function getMicrogridInfo(bytes32 hash)\\n        external\\n        view\\n        returns (\\n            address kaspaWallet,\\n            uint256 pricePerOp,\\n            string  memory country,\\n            string  memory city,\\n            bool    active,\\n            uint256 latestKWh,\\n            uint256 capacityGB\\n        )\\n    {\\n        Microgrid storage mg = microgridByHash[hash];\\n        require(mg.kaspaWallet != address(0), \\\"Unknown microgrid\\\");\\n        uint len = sensorHistory[hash].length;\\n        uint kwh = (len > 0) ? sensorHistory[hash][len - 1].kWh : 0;\\n        return (\\n            mg.kaspaWallet,\\n            mg.energyPricePerOp,\\n            mg.country,\\n            mg.city,\\n            mg.isActive,\\n            kwh,\\n            kwh / KWH_PER_GB\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x28cff87b641cba7021bc4131a4c20b3895c53aefc1945e48900c695cc508e7e0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba59286a1161008c578063d3c4108511610066578063d3c4108514610270578063de8c0448146102a1578063f9797a91146102d1578063fd8195c2146102ef576100ea565b8063ba59286a14610206578063bef9f8d114610222578063caa83a9c14610252576100ea565b806338b031d8116100c857806338b031d8146101765780639654ef6e14610180578063b4771d901461019c578063b6516f61146101d1576100ea565b80630a36107c146100ef57806316bc93c8146101245780632e12661f1461015a575b600080fd5b61010960048036038101906101049190611cfa565b61031f565b60405161011b969594939291906120c5565b60405180910390f35b61013e6004803603810190610139919061217c565b610869565b6040516101519796959493929190612266565b60405180910390f35b610174600480360381019061016f919061230f565b610b14565b005b61017e610d52565b005b61019a600480360381019061019591906124ab565b6111d1565b005b6101b660048036038101906101b1919061254a565b611464565b6040516101c896959493929190612586565b60405180910390f35b6101eb60048036038101906101e6919061217c565b6115dd565b6040516101fd969594939291906125f5565b60405180910390f35b610220600480360381019061021b9190612664565b611776565b005b61023c6004803603810190610237919061217c565b611a7b565b6040516102499190612732565b60405180910390f35b61025a611b47565b60405161026791906127ac565b60405180910390f35b61028a6004803603810190610285919061230f565b611b6b565b6040516102989291906127c7565b60405180910390f35b6102bb60048036038101906102b691906127f0565b611bac565b6040516102c8919061281d565b60405180910390f35b6102d9611bd0565b6040516102e69190612838565b60405180910390f35b610309600480360381019061030491906127f0565b611c28565b604051610316919061285a565b60405180910390f35b606080606080606080600080600090505b600480549050811015610406576000600160006004848154811061035757610356612875565b5b9060005260206000200154815260200190815260200160002090508c8c6040516103829291906128d4565b60405180910390208160020160405161039b91906129e5565b60405180910390201480156103de57508a8a6040516103bb9291906128d4565b6040518091039020816003016040516103d491906129e5565b6040518091039020145b156103f25782806103ee90612a2b565b9350505b5080806103fe90612a2b565b915050610330565b508067ffffffffffffffff81111561042157610420612380565b5b60405190808252806020026020018201604052801561044f5781602001602082028036833780820191505090505b5096508067ffffffffffffffff81111561046c5761046b612380565b5b60405190808252806020026020018201604052801561049a5781602001602082028036833780820191505090505b5095508067ffffffffffffffff8111156104b7576104b6612380565b5b6040519080825280602002602001820160405280156104e55781602001602082028036833780820191505090505b5094508067ffffffffffffffff81111561050257610501612380565b5b6040519080825280602002602001820160405280156105305781602001602082028036833780820191505090505b5093508067ffffffffffffffff81111561054d5761054c612380565b5b60405190808252806020026020018201604052801561057b5781602001602082028036833780820191505090505b5092508067ffffffffffffffff81111561059857610597612380565b5b6040519080825280602002602001820160405280156105c65781602001602082028036833780820191505090505b509150600080600090505b600480549050811015610859576000600482815481106105f4576105f3612875565b5b9060005260206000200154905060006001600083815260200190815260200160002090508e8e6040516106289291906128d4565b60405180910390208160020160405161064191906129e5565b604051809103902014801561068457508c8c6040516106619291906128d4565b60405180910390208160030160405161067a91906129e5565b6040518091039020145b1561084457818b858151811061069d5761069c612875565b5b6020026020010181815250508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a85815181106106e1576106e0612875565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806001015489858151811061073357610732612875565b5b6020026020010181815250508060040160009054906101000a900460ff1688858151811061076457610763612875565b5b60200260200101901515908115158152505060006002600084815260200190815260200160002080549050905060008082116107a15760006107e5565b600260008581526020019081526020016000206001836107c19190612a73565b815481106107d2576107d1612875565b5b9060005260206000209060020201600001545b9050808987815181106107fb576107fa612875565b5b6020026020010181815250506005816108149190612ad6565b88878151811061082757610826612875565b5b602002602001018181525050858061083e90612a2b565b96505050505b5050808061085190612a2b565b9150506105d1565b5050509499939850945094509450565b600080606080600080600080600160008a81526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361091d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091490612b53565b60405180910390fd5b6000600260008b8152602001908152602001600020805490509050600080821161094857600061098c565b600260008c81526020019081526020016000206001836109689190612a73565b8154811061097957610978612875565b5b9060005260206000209060020201600001545b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836001015484600201856003018660040160009054906101000a900460ff16856005876109e09190612ad6565b8480546109ec9061291c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a189061291c565b8015610a655780601f10610a3a57610100808354040283529160200191610a65565b820191906000526020600020905b815481529060010190602001808311610a4857829003601f168201915b50505050509450838054610a789061291c565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa49061291c565b8015610af15780601f10610ac657610100808354040283529160200191610af1565b820191906000526020600020905b815481529060010190602001808311610ad457829003601f168201915b505050505093509950995099509950995099509950505050919395979092949650565b60006001600084815260200190815260200160002090508060040160009054906101000a900460ff16610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390612bbf565b60405180910390fd5b8060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c2957508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90612c2b565b60405180910390fd5b60008211610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290612c97565b60405180910390fd5b600260008481526020019081526020016000206040518060400160405280848152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550507fd04ae7f5c365f5af29e2c51608606750fa1c539688801e8fab7195ee17d4fa33838342604051610d4593929190612cb7565b60405180910390a1505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160009054906101000a900460ff16610de6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddd90612d3a565b60405180910390fd5b600060058260050154610df99190612d5a565b90506000610e0a8360010154611a7b565b9050601e82610e199190612d5a565b60648260000151610e2a9190612d5a565b10156111cc57600080600090505b60048054905081101561112357600060048281548110610e5b57610e5a612875565b5b906000526020600020015490506000600160008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610ef89061291c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f249061291c565b8015610f715780601f10610f4657610100808354040283529160200191610f71565b820191906000526020600020905b815481529060010190602001808311610f5457829003601f168201915b50505050508152602001600382018054610f8a9061291c565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb69061291c565b80156110035780601f10610fd857610100808354040283529160200191611003565b820191906000526020600020905b815481529060010190602001808311610fe657829003601f168201915b505050505081526020016004820160009054906101000a900460ff161515151581526020016004820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806080015161108f575050611110565b866003016040516110a091906129e5565b60405180910390208160400151805190602001201480156110e35750866004016040516110cd91906129e5565b6040518091039020816060015180519060200120145b1561110d5760006110f383611a7b565b90508681600001511061110b57829450505050611123565b505b50505b808061111b90612a2b565b915050610e38565b506000801b8114611175578084600101819055507f3b958ab3272980fbfd6a370888626c69f73a3c4d6e22f6522507509b458333f53382604051611168929190612d9c565b60405180910390a16111ca565b60008460020160006101000a81548160ff0219169083151502179055507fd9957750e6343405c319eb99a4ec67fa11cfd66969318cbc71aa2d45fa53a349336040516111c1919061285a565b60405180910390a15b505b505050565b60008483836040516020016111e893929190612e49565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c90612eca565b60405180910390fd5b6040518060c001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff168152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908161137a919061308c565b506060820151816003019081611390919061308c565b5060808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060048190806001815401808255809150506001900390600052602060002001600090919091909150557f87a6734f743f308ae564dded0829f368c3499aa7b9acecacbd0a92ce041be5d0813360405161145592919061315e565b60405180910390a15050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16908060030180546114c69061291c565b80601f01602080910402602001604051908101604052809291908181526020018280546114f29061291c565b801561153f5780601f106115145761010080835404028352916020019161153f565b820191906000526020600020905b81548152906001019060200180831161152257829003601f168201915b5050505050908060040180546115549061291c565b80601f01602080910402602001604051908101604052809291908181526020018280546115809061291c565b80156115cd5780601f106115a2576101008083540402835291602001916115cd565b820191906000526020600020905b8154815290600101906020018083116115b057829003601f168201915b5050505050908060050154905086565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461162c9061291c565b80601f01602080910402602001604051908101604052809291908181526020018280546116589061291c565b80156116a55780601f1061167a576101008083540402835291602001916116a5565b820191906000526020600020905b81548152906001019060200180831161168857829003601f168201915b5050505050908060030180546116ba9061291c565b80601f01602080910402602001604051908101604052809291908181526020018280546116e69061291c565b80156117335780601f1061170857610100808354040283529160200191611733565b820191906000526020600020905b81548152906001019060200180831161171657829003601f168201915b5050505050908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600073ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183e906131d3565b60405180910390fd5b6001600085815260200190815260200160002060040160009054906101000a900460ff166118aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a190612bbf565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160011515815260200184815260200183815260200182815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190816119b5919061308c565b5060808201518160040190816119cb919061308c565b5060a082015181600501559050506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb098a592c213bb65419fbec76799a12091bcb1ab0dfc0890bbc386f7980378e33385604051611a6d929190612d9c565b60405180910390a150505050565b611a83611c67565b60006002600084815260200190815260200160002080549050905060008111611ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad89061323f565b60405180910390fd5b60026000848152602001908152602001600020600182611b019190612a73565b81548110611b1257611b11612875565b5b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528160005260406000208181548110611b8757600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b60048181548110611bbc57600080fd5b906000526020600020016000915090505481565b60606004805480602002602001604051908101604052809291908181526020018280548015611c1e57602002820191906000526020600020905b815481526020019060010190808311611c0a575b5050505050905090565b60058181548110611c3857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112611cba57611cb9611c95565b5b8235905067ffffffffffffffff811115611cd757611cd6611c9a565b5b602083019150836001820283011115611cf357611cf2611c9f565b5b9250929050565b60008060008060408587031215611d1457611d13611c8b565b5b600085013567ffffffffffffffff811115611d3257611d31611c90565b5b611d3e87828801611ca4565b9450945050602085013567ffffffffffffffff811115611d6157611d60611c90565b5b611d6d87828801611ca4565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611dba81611da7565b82525050565b6000611dcc8383611db1565b60208301905092915050565b6000602082019050919050565b6000611df082611d7b565b611dfa8185611d86565b9350611e0583611d97565b8060005b83811015611e36578151611e1d8882611dc0565b9750611e2883611dd8565b925050600181019050611e09565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e9a82611e6f565b9050919050565b611eaa81611e8f565b82525050565b6000611ebc8383611ea1565b60208301905092915050565b6000602082019050919050565b6000611ee082611e43565b611eea8185611e4e565b9350611ef583611e5f565b8060005b83811015611f26578151611f0d8882611eb0565b9750611f1883611ec8565b925050600181019050611ef9565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611f7281611f5f565b82525050565b6000611f848383611f69565b60208301905092915050565b6000602082019050919050565b6000611fa882611f33565b611fb28185611f3e565b9350611fbd83611f4f565b8060005b83811015611fee578151611fd58882611f78565b9750611fe083611f90565b925050600181019050611fc1565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b61203c81612027565b82525050565b600061204e8383612033565b60208301905092915050565b6000602082019050919050565b600061207282611ffb565b61207c8185612006565b935061208783612017565b8060005b838110156120b857815161209f8882612042565b97506120aa8361205a565b92505060018101905061208b565b5085935050505092915050565b600060c08201905081810360008301526120df8189611de5565b905081810360208301526120f38188611ed5565b905081810360408301526121078187611f9d565b9050818103606083015261211b8186612067565b9050818103608083015261212f8185611f9d565b905081810360a08301526121438184611f9d565b9050979650505050505050565b61215981611da7565b811461216457600080fd5b50565b60008135905061217681612150565b92915050565b60006020828403121561219257612191611c8b565b5b60006121a084828501612167565b91505092915050565b6121b281611e8f565b82525050565b6121c181611f5f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122015780820151818401526020810190506121e6565b60008484015250505050565b6000601f19601f8301169050919050565b6000612229826121c7565b61223381856121d2565b93506122438185602086016121e3565b61224c8161220d565b840191505092915050565b61226081612027565b82525050565b600060e08201905061227b600083018a6121a9565b61228860208301896121b8565b818103604083015261229a818861221e565b905081810360608301526122ae818761221e565b90506122bd6080830186612257565b6122ca60a08301856121b8565b6122d760c08301846121b8565b98975050505050505050565b6122ec81611f5f565b81146122f757600080fd5b50565b600081359050612309816122e3565b92915050565b6000806040838503121561232657612325611c8b565b5b600061233485828601612167565b9250506020612345858286016122fa565b9150509250929050565b61235881611e8f565b811461236357600080fd5b50565b6000813590506123758161234f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123b88261220d565b810181811067ffffffffffffffff821117156123d7576123d6612380565b5b80604052505050565b60006123ea611c81565b90506123f682826123af565b919050565b600067ffffffffffffffff82111561241657612415612380565b5b61241f8261220d565b9050602081019050919050565b82818337600083830152505050565b600061244e612449846123fb565b6123e0565b90508281526020810184848401111561246a5761246961237b565b5b61247584828561242c565b509392505050565b600082601f83011261249257612491611c95565b5b81356124a284826020860161243b565b91505092915050565b600080600080608085870312156124c5576124c4611c8b565b5b60006124d387828801612366565b94505060206124e4878288016122fa565b935050604085013567ffffffffffffffff81111561250557612504611c90565b5b6125118782880161247d565b925050606085013567ffffffffffffffff81111561253257612531611c90565b5b61253e8782880161247d565b91505092959194509250565b6000602082840312156125605761255f611c8b565b5b600061256e84828501612366565b91505092915050565b61258081611da7565b82525050565b600060c08201905061259b60008301896121a9565b6125a86020830188612577565b6125b56040830187612257565b81810360608301526125c7818661221e565b905081810360808301526125db818561221e565b90506125ea60a08301846121b8565b979650505050505050565b600060c08201905061260a60008301896121a9565b61261760208301886121b8565b8181036040830152612629818761221e565b9050818103606083015261263d818661221e565b905061264c6080830185612257565b61265960a08301846121a9565b979650505050505050565b6000806000806080858703121561267e5761267d611c8b565b5b600061268c87828801612167565b945050602085013567ffffffffffffffff8111156126ad576126ac611c90565b5b6126b98782880161247d565b935050604085013567ffffffffffffffff8111156126da576126d9611c90565b5b6126e68782880161247d565b92505060606126f7878288016122fa565b91505092959194509250565b6040820160008201516127196000850182611f69565b50602082015161272c6020850182611f69565b50505050565b60006040820190506127476000830184612703565b92915050565b6000819050919050565b600061277261276d61276884611e6f565b61274d565b611e6f565b9050919050565b600061278482612757565b9050919050565b600061279682612779565b9050919050565b6127a68161278b565b82525050565b60006020820190506127c1600083018461279d565b92915050565b60006040820190506127dc60008301856121b8565b6127e960208301846121b8565b9392505050565b60006020828403121561280657612805611c8b565b5b6000612814848285016122fa565b91505092915050565b60006020820190506128326000830184612577565b92915050565b600060208201905081810360008301526128528184611de5565b905092915050565b600060208201905061286f60008301846121a9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60006128bb83856128a4565b93506128c883858461242c565b82840190509392505050565b60006128e18284866128af565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061293457607f821691505b602082108103612947576129466128ed565b5b50919050565b60008190508160005260206000209050919050565b6000815461296f8161291c565b61297981866128a4565b9450600182166000811461299457600181146129a9576129dc565b60ff19831686528115158202860193506129dc565b6129b28561294d565b60005b838110156129d4578154818901526001820191506020810190506129b5565b838801955050505b50505092915050565b60006129f18284612962565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a3682611f5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a6857612a676129fc565b5b600182019050919050565b6000612a7e82611f5f565b9150612a8983611f5f565b9250828203905081811115612aa157612aa06129fc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ae182611f5f565b9150612aec83611f5f565b925082612afc57612afb612aa7565b5b828204905092915050565b7f556e6b6e6f776e206d6963726f67726964000000000000000000000000000000600082015250565b6000612b3d6011836121d2565b9150612b4882612b07565b602082019050919050565b60006020820190508181036000830152612b6c81612b30565b9050919050565b7f496e616374697665206d6963726f677269640000000000000000000000000000600082015250565b6000612ba96012836121d2565b9150612bb482612b73565b602082019050919050565b60006020820190508181036000830152612bd881612b9c565b9050919050565b7f4e6f7420617574686f7269736564000000000000000000000000000000000000600082015250565b6000612c15600e836121d2565b9150612c2082612bdf565b602082019050919050565b60006020820190508181036000830152612c4481612c08565b9050919050565b7f6b5768206d757374206265203e20300000000000000000000000000000000000600082015250565b6000612c81600f836121d2565b9150612c8c82612c4b565b602082019050919050565b60006020820190508181036000830152612cb081612c74565b9050919050565b6000606082019050612ccc6000830186612577565b612cd960208301856121b8565b612ce660408301846121b8565b949350505050565b7f4e6f646520696e61637469766500000000000000000000000000000000000000600082015250565b6000612d24600d836121d2565b9150612d2f82612cee565b602082019050919050565b60006020820190508181036000830152612d5381612d17565b9050919050565b6000612d6582611f5f565b9150612d7083611f5f565b9250828202612d7e81611f5f565b91508282048414831517612d9557612d946129fc565b5b5092915050565b6000604082019050612db160008301856121a9565b612dbe6020830184612577565b9392505050565b60008160601b9050919050565b6000612ddd82612dc5565b9050919050565b6000612def82612dd2565b9050919050565b612e07612e0282611e8f565b612de4565b82525050565b600081905092915050565b6000612e23826121c7565b612e2d8185612e0d565b9350612e3d8185602086016121e3565b80840191505092915050565b6000612e558286612df6565b601482019150612e658285612e18565b9150612e718284612e18565b9150819050949350505050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b6000612eb46012836121d2565b9150612ebf82612e7e565b602082019050919050565b60006020820190508181036000830152612ee381612ea7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612f4c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612f0f565b612f568683612f0f565b95508019841693508086168417925050509392505050565b6000612f89612f84612f7f84611f5f565b61274d565b611f5f565b9050919050565b6000819050919050565b612fa383612f6e565b612fb7612faf82612f90565b848454612f1c565b825550505050565b600090565b612fcc612fbf565b612fd7818484612f9a565b505050565b5b81811015612ffb57612ff0600082612fc4565b600181019050612fdd565b5050565b601f8211156130405761301181612eea565b61301a84612eff565b81016020851015613029578190505b61303d61303585612eff565b830182612fdc565b50505b505050565b600082821c905092915050565b600061306360001984600802613045565b1980831691505092915050565b600061307c8383613052565b9150826002028217905092915050565b613095826121c7565b67ffffffffffffffff8111156130ae576130ad612380565b5b6130b8825461291c565b6130c3828285612fff565b600060209050601f8311600181146130f657600084156130e4578287015190505b6130ee8582613070565b865550613156565b601f19841661310486612eea565b60005b8281101561312c57848901518255600182019150602085019450602081019050613107565b868310156131495784890151613145601f891682613052565b8355505b6001600288020188555050505b505050505050565b60006040820190506131736000830185612577565b61318060208301846121a9565b9392505050565b7f4e6f646520657869737473000000000000000000000000000000000000000000600082015250565b60006131bd600b836121d2565b91506131c882613187565b602082019050919050565b600060208201905081810360008301526131ec816131b0565b9050919050565b7f4e6f206461746100000000000000000000000000000000000000000000000000600082015250565b60006132296007836121d2565b9150613234826131f3565b602082019050919050565b600060208201905081810360008301526132588161321c565b905091905056fea264697066735822122067cf921ab2ddab4018e40cf823e8d79ca9be5cf929cb0261e44208d29da1eb2d64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getMicrogridInfo(bytes32)": {
        "notice": "Info completa + energia atual e capacidade"
      },
      "microgridsByLocation(string,string)": {
        "notice": "Lista microgrids de uma cidade retornando vetores paralelos"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 254,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "poe",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ProofOfExistence)242"
      },
      {
        "astId": 302,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "microgridByHash",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Microgrid)279_storage)"
      },
      {
        "astId": 308,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "sensorHistory",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_array(t_struct(SensorRecord)284_storage)dyn_storage)"
      },
      {
        "astId": 313,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "nodeByOperator",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Node)297_storage)"
      },
      {
        "astId": 316,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "allMicrogridHashes",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 319,
        "contract": "contracts/Sunest.sol:Sunest",
        "label": "allNodeOperators",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(SensorRecord)284_storage)dyn_storage": {
        "base": "t_struct(SensorRecord)284_storage",
        "encoding": "dynamic_array",
        "label": "struct Sunest.SensorRecord[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ProofOfExistence)242": {
        "encoding": "inplace",
        "label": "contract ProofOfExistence",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Node)297_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Sunest.Node)",
        "numberOfBytes": "32",
        "value": "t_struct(Node)297_storage"
      },
      "t_mapping(t_bytes32,t_array(t_struct(SensorRecord)284_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Sunest.SensorRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(SensorRecord)284_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Microgrid)279_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Sunest.Microgrid)",
        "numberOfBytes": "32",
        "value": "t_struct(Microgrid)279_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Microgrid)279_storage": {
        "encoding": "inplace",
        "label": "struct Sunest.Microgrid",
        "members": [
          {
            "astId": 268,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "kaspaWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 270,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "energyPricePerOp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 272,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "country",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 274,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "city",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 276,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "isActive",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 278,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "owner",
            "offset": 1,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Node)297_storage": {
        "encoding": "inplace",
        "label": "struct Sunest.Node",
        "members": [
          {
            "astId": 286,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "operator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 288,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "currentMicrogridHash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 290,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "isActive",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 292,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "country",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 294,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "city",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 296,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "storedGB",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(SensorRecord)284_storage": {
        "encoding": "inplace",
        "label": "struct Sunest.SensorRecord",
        "members": [
          {
            "astId": 281,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "kWh",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 283,
            "contract": "contracts/Sunest.sol:Sunest",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}